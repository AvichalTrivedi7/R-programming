age=c(10,12,23,34,12,23,23,34,55)
df=data.frame(B,gender,age)
df
str(df)
B
mat <- matrix(1:9,nrow=3,ncol=3)
try1 <- data.frame(mat);try1
gender1=c('male','female','male','female','male','female','male','male','female')
age1=c(10,12,23,34,12,23,23,34,55)
try2 <- data.frame(mat,gender1,age1);try2
# Using last class' dataframe
name=c("A","B","C","D","E","F","G");gender=c("Male","Female","Female","Male","Male","Female","Male");age=c(10,20,12,14,16,15,17);weight=c(26,35,28,30,31,29,34)
student.list <- list(name=name,gender=gender,age=age,weight=weight)
# Accessing variables of data frame using brackets (number or name), double brackets, $ sign and name
student["age"]
# Using last class' dataframe
name=c("A","B","C","D","E","F","G");gender=c("Male","Female","Female","Male","Male","Female","Male");age=c(10,20,12,14,16,15,17);weight=c(26,35,28,30,31,29,34)
student.list <- list(name=name,gender=gender,age=age,weight=weight)
student <- data.frame(student.list)
# Accessing variables of data frame using brackets (number or name), double brackets, $ sign and name
student["age"]
student[,"age"]
student[c("age","gender")]
student[["age"]][["gender"]]
student[student$gender=="F" & student$age>12,]
student[student$gender=="Female" & student$age>12,]
student[student$gender[1]=="F" & student$age>12,]
student[student$gender[0]=="F" & student$age>12,]
student[student$gender[1]=="F" & student$age>12,]
subset(student,gender == "Female")
subset(student,gender == "Female" & age < 14)
x="string"
x[0]
x="string"
print(x[0])
x="string"
x[1]
subset(student,gender == "Female" && age < 14)
&
# Selecting specific columns using select argument in select function()
subset(student,gender=="Female",select=c(age,weight))
subset(student,gender=="Male",select=-age)
subset(student,gender=="Male",select=-"age")
subset(student,gender=="Male",select=-"age")
height <- c(155,153,165,162,158,156,168)
student$height <- height
student
# Adding or Removing columns from a dataframe
height <- c(155,153,165,162,158,156,168,1)
student$height <- height
result <- c("Pass","Fail","Pass","Fail","Pass","Pass","Pass")
student <- cbind(student,result)
student
new <- c("H","Male","23","40","159","Fail")
student <- rbind(student,new)
student
student <- student[-c(7,8),]
# Using c()
student <- student[-c(7,8),]
student
#Q.1.
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list(I,M,N,O)
#Q.2.
#(i)
L[1][2]
L[[1]][2]
L[["M"]][17]
L[["M"]][1]
#b
L[[M]][1]
L$M[1]
#b
L$M
L[M]
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list(I,M,N,O)
#Q.2.
#(i)
L[[1]][2]
#b
L[M]
#b
L[[M]]
#b
L[["M"]]
L[2]
# List in R
# Lists are generic vectors where each element can be any type of object
# a vector, a matrix, a dataframe, an array, even normal numbers ... it can have anything inside of it. (maybe functions too)
# Creating an empty list
List_01 <- list()
List_01
# Creating an empty list of length 4
List_01 <- vector("list",length=4)
List_01
#If you don't give mode value it creates a double using vector function
double_value=vector()
double_value=2
double_value
typeof(double_value)
# syntax ---> list(name_1=object_1,name_2=object_2,...,name_m=object_m)
# Creating a  list
list1 <- list(1.34,c("Bob","John"),TRUE,1+2i)
list1
length(list1)
mode(list1)
is.list(list1)
# Creating a named list in R
list2 <- list(value=1.34,names=c("Bob","John"),TRUE,1+2i)
list2
# Concatenation of list
list3 <- list(A=1:4, B=c("Male","Female"), C=matrix(1:4,nrow=2))
list4 <- list(P=1:5, Q=c(TRUE,FALSE))
list_combine <- c(list3,list4)
list_combine
# Append in list (Works the same as c() in concatenation)
New_list <- append(list3,list4)
New_list
# Nested list
lis1=list(c(5,6),c(5,6,7))
lis2=list(c(1,2),c(1,2,3))
list5 <- list(lis1,lis2)
list5
# Accessing components in a list
list3[[2]]
list3$B
list3[["B"]]
list3[[2]][1]
list3$B[1]
list3[["B"]][1]
#b
L
#Q.1.
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list(I,M=M,N,O)
#Q.2.
#(i)
L[[1]][2]
#b
L[[M]][1]
#Q.1.
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list(I,"M"=M,N,O)
#Q.2.
#(i)
L[[1]][2]
#b
L[[M]][1]
#b
L[["M"]][1]
#(iii)
L$N[3:4]
#(iii)
L$N[c(3,4)]
#(iii)
L$"N"[c(3,4)]
#(iii)
L$[[N]][c(3,4)]
#(iii)
L[[N]][c(3,4)]
#(iii)
L[[N]][c(3,4)]
#(iii)
L[["N"]][c(3,4)]
#(iii)
L[["N"]][3:4]
#(iii)
L[["N"]][3]
L[["M"]][17]
L = list("I"=I,"M"=M,"N"=N,"O"=O)
L[["N"]][3]
L[["N"]][3:4]
#(iii)
L[["N"]][c(3,4)]
L$N[c(3,4)]
#(iv)
L[["O"]][2]
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings10,000","Rec","FD"),Balance=c(NULL,150000,900000))
#Q.2.
#a
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d
d[taken_loan]=c("Yes","No","No")
d[taken_loan]=cbind("Yes","No","No")
#b
d$taken_loan = c("Yes","No","No")
d
d = rbind(d,c("D","Savings","110000","Yes"))
d = rbind(d,c("E","Rec","350000","No"))
d = rbind(d,c("F","FD","900000","No"))
d
d = rbind(d,c("D","Savings",110000,"Yes"))
d = rbind(d,c("E","Rec",350000,"No"))
d = rbind(d,c("F","FD",900000,"No"))
d
#Q.1.
#a)
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list("I"=I,"M"=M,"N"=N,"O"=O)
#b)
#(i)
L[[1]][2]
#(ii)
L[["M"]][17]
#(iii)
L$N[c(3,4)]
#(iv)
L[["O"]][2]
#Q.2.
#a
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d
#b
d$taken_loan = c("Yes","No","No")
d
#c
d = rbind(d,c("D","Savings",110000,"Yes"))
d = rbind(d,c("E","Rec",350000,"No"))
d = rbind(d,c("F","FD",900000,"No"))
d
#d
#e
#f
#g
d
d = rbind(d,c("F","FD","900000","No"))
d
str(d)
#Q.1.
#a)
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list("I"=I,"M"=M,"N"=N,"O"=O)
#b)
#(i)
L[[1]][2]
#(ii)
L[["M"]][17]
#(iii)
L$N[c(3,4)]
#(iv)
L[["O"]][2]
#Q.2.
#a
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d
#b
d$taken_loan = c("Yes","No","No")
d
#c
d = rbind(d,c("D","Savings",110000,"Yes"))
d = rbind(d,c("E","Rec",350000,"No"))
d = rbind(d,c("F","FD",900000,"No"))
d
str(d)
#d
#e
#f
#g
str(d)
#Q.1.
#a)
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list("I"=I,"M"=M,"N"=N,"O"=O)
#b)
#(i)
L[[1]][2]
#(ii)
L[["M"]][17]
#(iii)
L$N[c(3,4)]
#(iv)
L[["O"]][2]
#Q.2.
#a
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d
#b
d$taken_loan = c("Yes","No","No")
d
#c
d = rbind(d,c("D","Savings",110000,"Yes"))
d = rbind(d,c("E","Rec",350000,"No"))
d = rbind(d,c("F","FD",900000,"No"))
d
str(d)
#d
#e
#f
#g
d[c(1,4),2:3]
d[Cust_Name="C"]
#(ii)
d[Cust_Name="C",]
subset(d,Cust_Name="C")
#(ii)
subset(d,Cust_Name=="C")
#(ii)
subset(d, Cust_Name == "C")
#(iii)
subset(d, Cust_Name == "A", select=Balance)
#e
d[Balance>200000]
#e
subset(d, Balance>200000)
#f
subset(d, Account_type == "Savings")
#g
subset(d, taken_load="Yes" & Balance < 100000)
#g
subset(d, taken_loan = "Yes" & Balance < 100000)
#g
subset(d, taken_loan = "Yes" & Balance < 100000)
#g
subset(d, taken_loan == "Yes" & Balance < 100000)
#g
subset(d, Balance < 100000 & taken_loan == "Yes" )
#g
subset(d, Balance < 10000 & taken_loan == "Yes" )
#g
subset(d, Balance < 10001 & taken_loan == "Yes" )
#g
subset(d, Balance < 100000 & taken_loan == "Yes" )
#Q.1.
#a)
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list("I"=I,"M"=M,"N"=N,"O"=O)
#b)
#(i)
L[[1]][2]
#(ii)
L[["M"]][17]
#(iii)
L$N[c(3,4)]
#(iv)
L[["O"]][2]
#Q.2.
#a
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d
#b
d$taken_loan = c("Yes","No","No")
d
#c
d = rbind(d,c("D","Savings",110000,"Yes"))
d = rbind(d,c("E","Rec",350000,"No"))
d = rbind(d,c("F","FD",900000,"No"))
d
#d
#(i)
d[c(1,4),2:3]
#(ii)
subset(d, Cust_Name == "C")
#(iii)
subset(d, Cust_Name == "A", select=Balance)
#e
subset(d, Balance>200000)
#f
subset(d, Account_type == "Savings")
#g
subset(d, Balance < 100000 & taken_loan == "Yes")
#Q.1.
#a)
I = c(25,35,62)
M = c(15,6,5,18,17,20,21,24,18)
N = c("A","B","C","D")
O = c(TRUE,FALSE,TRUE)
L = list("I"=I,"M"=M,"N"=N,"O"=O)
#b)
#(i)
L[[1]][2]
#(ii)
L[["M"]][17]
#(iii)
L$N[c(3,4)]
#(iv)
L[["O"]][2]
#Q.2.
#a
d = data.frame(Cust_Name=c("A","B","C"),Account_type=c("Savings","Rec","FD"),Balance=c(10000,150000,900000))
d
#b
d$taken_loan = c("Yes","No","No")
d
#c
d = rbind(d,c("D","Savings",110000,"Yes"))
d = rbind(d,c("E","Rec",350000,"No"))
d = rbind(d,c("F","FD",900000,"No"))
d
#d
#(i)
d[c(1,4),2:3]
#(ii)
subset(d, Cust_Name == "C")
#(iii)
subset(d, Cust_Name == "A", select=Balance)
#e
subset(d, Balance>200000)
#f
subset(d, Account_type == "Savings")
#g
subset(d, Balance < 100000 & taken_loan == "Yes")
getwd()
df20 <- read_xlsx("imdb (for R).xlsx", sheet=2)
import readxl
source("~/R programming/class-14.R", echo=TRUE)
df20
df20 <- read_xlsx("imdb (for R).xlsx", sheet=3)
df20
df20 <- read_xlsx("imdb (for R).xlsx", sheet=2)
df20
df21 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = "R1C1:R3C2")
df21
df21 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = "R1C1:R4C2")
df21
df21 <- read_xlsx("imdb (for R).xlsx", header=TRUE, sheet=2, range = "R1C1:R3C2")
df21
df22 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = cell_cols(c("id","country")))
df22
df22 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = cell_cols(c("id","country")))
df22
df22 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = cell_cols(c("A","B")))
df22
df22 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = cell_cols(c(1,2)))
#cell_cols() will be A and B and so on.... for all the columns, regardless of what the column names are
df22
df22 <- read_xlsx("imdb (for R).xlsx", sheet=2, range = cell_cols(1))
#cell_cols() will be A and B and so on.... for all the columns, regardless of what the column names are
df22
df24 <- read_xlsx("imdb (for R).xlsx", sheet=2, col_types=c("numeric","character"))
df24
df24 <- read_xlsx("imdb (for R).xlsx", col_types=c("numeric","chr"))
df24 <- read_xlsx("imdb (for R).xlsx", sheet=2, col_types=c("numeric","character"))
df24
df24 <- read_xlsx("imdb (for R).xlsx", sheet=2, col_types=c("numeric","chr"))
df24
df24 <- read_xlsx("imdb (for R).xlsx")
df24
df24 <- read_xlsx("imdb (for R).xlsx",col_types=c("numeric","skip","numeric"))
getwd()
df24 <- read_xlsx("imdb (for R).xlsx")
df24
df24 <- read_xlsx("imdb (for R).xlsx", sheet=3)
df24
df24 <- read_xlsx("imdb (for R).xlsx", sheet=2)
df24
df20
save(df20,file="mysaved_data.RData")
load("mysaved_data.RData")
df20
head(df20)
view(df20)
View(df20)
df20.remove()
file.remove(mysaved_data.RData)
file.remove("mysaved_data.RData")
save(df20,file="mysaved_data.RData")
file.remove("mysaved_data.RData")
install.packages("writexl")
library("writexl")
write_xlsx(df20, "df20.xlsx")
write.csv(df20, "df20.csv")
write.table(df20, "df20.txt")
write.table(df20, "df20.txt", sep=",")
str(df20)
str(df20)
write_xlsx(df20, "df20.xlsx")
write_xlsx(df20, "df30.xlsx")
df20 <- read_xlsx("imdb (for R).xlsx", sheet=2)
write_xlsx(df20, "df30.xlsx")
str("df30.xlsx")
str(df30.xlsx)
str(df30.xlsx)
str(df30.xlsx)
df25 <- read_xlsx("imdb (for R).xlsx")
save(df25,file="my_saved_data.RData")
file.remove("my_saved_data.RData")
write_xlsx(df20, "df30.xlsx")
write.csv(df20, "df20.csv")
write.table(df20, "df20.txt")
write.table(df20, "df20.txt", sep=",")
write.table(df20, "df20.txt", sep=",", rownames = F)
write_xlsx(df20, "df20.xlsx")
write.csv(df20, "df20.csv")
write.table(df20, "df20.txt")
write.table(df20, "df20.txt", sep=",")
write.table(df20, "df20.txt", sep=",", rownames = F)
